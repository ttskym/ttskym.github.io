title: 科学上网配置
date: 2015-08-18 23:46:41
tags:
 - vps
 - pptp
 - shadowsocks
---
本主要介绍在国外的vps上配置科学上网通路。事因是之前在DigitalOcean上配置的通路近段时间的访问速度已经影响工作效率，只能寻找替代。恰巧看到VULTR促销 ，可以免费试用两个月，于是有了这篇手记，附贴一枚[邀请链接](http://www.vultr.com/?ref=6875209)。

之前配置过L2TP，PPTP，shadowsocks三种通路。L2TP虽然在安全性较高，但使用体验较后两种稍差，且配置麻烦，因此本文不覆盖L2TP的配置。shadowsocks结合官方提供的osx客户端，可以很方便的实现浏览器端的使用。而PPTP VPN则可以弥补整个系统全局的需求。
<!--more-->

Shadowsocks Server配置
---
[shadowsocks github 主页](https://github.com/shadowsocks),包含了client和Sever众多版本，这里是我采用的已经编译好的[python Server版本](https://github.com/shadowsocks/shadowsocks)

首先执行以下命令安装shadowsocks Server
{% codeblock lang:bash %}  
git clone https://github.com/shadowsocks/shadowsocks.git && python setup.py install
{% endcodeblock %}

接着，在/etc目录*(此目录非强制，放在该目录下只是遵循惯例)*创建配置文件(shadowsocks.json)或将准备好的配置文件拷贝此处。具体参数请参考官网[config guide](http://shadowsocks.org/en/config/quick-guide.html)

现在这条命令以后台守护进程模式指定配置文件启动程序。
{% codeblock lang:bash %}
ssserver -c /etc/shadowsocks.json -d start

参数解释：		
-c CONFIG              path to config file
-d start/stop/restart  daemon mode
{% endcodeblock %}
此时，执行ps -ef|grep shadowsocks，可见后台进程。最后将ssserver启动脚本添加进/etc/rc.local，重启后可自动启动。

PPTP Server配置
---
根据自己的发行版本，利用包管理工具安装pptpd后，配置/etc/ppp/pptpd-options(options.pptpd)，/etc/pptpd.conf及/etc/ppp/chap-secrets三个文件。

{% codeblock lang:bash pptpd-options(options.pptpd) %}
name pptpd         #服务器名字，chap-secret文件中的server字段
refuse-pap 
refuse-chap
refuse-mschap      #默认拒绝上述三种认证
require-mschap-v2  #只接受mschap-v2认证
require-mppe-128   #采用128位的mppe方式加密
proxyarp
lock
nobsdcomp 
novj
novjccomp
nologfd
ms-dns 8.8.8.8     #Client连接后获得的DNS，下述两项是唯一我们需要自行设置的，其他均为系统默认，可根据实际需求调节
ms-dns 8.8.4.4     
{% endcodeblock %}

{% codeblock lang:bash pptpd.conf %}
option /etc/ppp/options.pptpd   #指定options.pptpd，采用默认即可
logwtmp                         #用wtmp记录Client的连接情况
localip 10.100.0.18             #下述两项需自行添加，为server和client的连接后获取地址。
remoteip 10.100.0.2-150
{% endcodeblock %}

{% codeblock lang:bash chap-secrets %}
# client    server  secret          IP addresses
  username  pptpd   password        *
{% endcodeblock %}

最后在/etc/sysctl.conf中设置net.ipv4.ip_forward = 1 开启系统路由模式。并配置iptables。

{% codeblock lang:bash %}
iptables -F  //将默认的防火墙策略清空，否则往往配置正确却无法试用！！！！
iptables -t nat -A POSTROUTING -j SNAT --to-source $myIP -o eth+ //配置防火墙NAT转发
iptables -A INPUT -p tcp -m tcp --dport 1723 -j ACCEPT  //为PPTPD的1723端口开启策略
service iptables save  //将上述防火墙策略保存，重启后自动载入，否则重启后策略清空。
{% endcodeblock %}
[自用配置脚本见此处](https://github.com/ttskym/mytool/tree/master/vps_confg)
